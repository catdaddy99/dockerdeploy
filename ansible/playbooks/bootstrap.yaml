
---
- name: Bootstrap server for future ansible runs
  hosts: "docker"
  remote_user: root

  vars: 
    user_name: tfuser
    user_pass: B00TY
    user_name2: pknowles
    user_pass2: B00TY

  tasks: 
#  - name: Update apt cache
#    apt: update_cache=yes

#  - name: Safe aptitude upgrade
#    apt: upgrade=safe
#    async: 600
#    poll: 5

  - name: Add tfuser user
    user: >
      name={{ user_name }} 
      password=!
      shell=/bin/bash 
      groups=sudo 
      append=yes 
      generate_ssh_key=yes 
      ssh_key_bits=2048 
      state=present

  - name: Add Jenkin tfuser public key to tfuser
    authorized_key: 
      user: "{{ user_name }}"
      key: "{{ lookup('file', 'id_ed25519.pub') }}" 
      state: present

  - name: Allow tfuser to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^tfuser'
      line: 'tfuser ALL=(ALL) NOPASSWD: ALL'
      validate: visudo -cf %s

  - name: Add pknowles user
    user: >
      name={{ user_name2 }} 
      password={{ user_pass2 | password_hash('sha512') }} 
      shell=/bin/bash 
      groups=sudo 
      append=yes 
      generate_ssh_key=yes 
      ssh_key_bits=2048 
      state=present

  - name: Add pknowles public key
    authorized_key: 
      user: "{{ user_name2 }}"
      key: "{{ lookup('file', 'id_ed25519.pub') }}" 
      state: present

  - name: Allow pknowles to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^pknowles'
      line: 'pknowles ALL=(ALL) NOPASSWD: ALL'
      validate: visudo -cf %s




#    notify: restart ssh

#  - name: Change SSH port
#    lineinfile: 
#      dest: /etc/ssh/sshd_config 
#      regexp: "^Port" 
#      line: "Port 30000" 
#      state: present
#    notify: restart ssh

#  - name: Remove root SSH access
#    lineinfile: 
#      dest: /etc/ssh/sshd_config 
#      regexp: "^PermitRootLogin" 
#      line: "PermitRootLogin no" 
#      state: present
#    notify: restart ssh

#  - name: Remove password SSH access
#    lineinfile: 
#      dest: /etc/ssh/sshd_config 
#      regexp: "^PasswordAuthentication" 
#      line: "PasswordAuthentication no" 
#      state: present

#  - name: Reboot the server
#    command: /sbin/reboot 

#  handlers:
#  - name: restart ssh
#    service: name=ssh state=restarted